# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '.\camberUIDialog.ui'
#
# Created by: PyQt5 UI code generator 5.15.11
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(513, 214)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(".\\camberShirtLogo.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.inputFileButton = QtWidgets.QPushButton(self.centralwidget)
        self.inputFileButton.setGeometry(QtCore.QRect(400, 10, 91, 31))
        self.inputFileButton.setObjectName("inputFileButton")
        self.outputSelection = QtWidgets.QLineEdit(self.centralwidget)
        self.outputSelection.setGeometry(QtCore.QRect(100, 80, 261, 31))
        self.outputSelection.setObjectName("outputSelection")
        self.progressBar = QtWidgets.QProgressBar(self.centralwidget)
        self.progressBar.setGeometry(QtCore.QRect(10, 150, 351, 31))
        self.progressBar.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.progressBar.setProperty("value", 0)
        self.progressBar.setTextVisible(True)
        self.progressBar.setOrientation(QtCore.Qt.Horizontal)
        self.progressBar.setInvertedAppearance(True)
        self.progressBar.setTextDirection(QtWidgets.QProgressBar.TopToBottom)
        self.progressBar.setObjectName("progressBar")
        self.inputSelection = QtWidgets.QLineEdit(self.centralwidget)
        self.inputSelection.setGeometry(QtCore.QRect(100, 10, 261, 31))
        self.inputSelection.setObjectName("inputSelection")
        self.outputDirButton = QtWidgets.QPushButton(self.centralwidget)
        self.outputDirButton.setGeometry(QtCore.QRect(400, 80, 91, 31))
        self.outputDirButton.setObjectName("outputDirButton")
        self.outputFileLabel = QtWidgets.QLabel(self.centralwidget)
        self.outputFileLabel.setGeometry(QtCore.QRect(10, 80, 81, 31))
        self.outputFileLabel.setObjectName("outputFileLabel")
        self.inputFileLabel = QtWidgets.QLabel(self.centralwidget)
        self.inputFileLabel.setGeometry(QtCore.QRect(10, 10, 51, 31))
        self.inputFileLabel.setObjectName("inputFileLabel")
        self.executeButton = QtWidgets.QPushButton(self.centralwidget)
        self.executeButton.setGeometry(QtCore.QRect(400, 150, 91, 31))
        self.executeButton.setObjectName("executeButton")
        self.mainLabel = QtWidgets.QLabel(self.centralwidget)
        self.mainLabel.setGeometry(QtCore.QRect(410, 186, 61, 20))
        self.mainLabel.setText("")
        self.mainLabel.setObjectName("mainLabel")
        self.transparentCheckbox = QtWidgets.QCheckBox(self.centralwidget)
        self.transparentCheckbox.setGeometry(QtCore.QRect(9, 120, 191, 20))
        self.transparentCheckbox.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.transparentCheckbox.setObjectName("transparentCheckbox")
        self.filesSelected = QtWidgets.QLabel(self.centralwidget)
        self.filesSelected.setGeometry(QtCore.QRect(10, 50, 101, 16))
        self.filesSelected.setObjectName("filesSelected")
        self.filesSuccessful = QtWidgets.QLabel(self.centralwidget)
        self.filesSuccessful.setGeometry(QtCore.QRect(20, 190, 161, 16))
        self.filesSuccessful.setObjectName("filesSuccessful")
        self.fileCountSuccessLCD = QtWidgets.QLCDNumber(self.centralwidget)
        self.fileCountSuccessLCD.setGeometry(QtCore.QRect(193, 190, 51, 20))
        self.fileCountSuccessLCD.setStyleSheet("background-color: rgb(0, 0, 0);")
        self.fileCountSuccessLCD.setObjectName("fileCountSuccessLCD")
        self.fileCountSelectedLCD = QtWidgets.QLCDNumber(self.centralwidget)
        self.fileCountSelectedLCD.setGeometry(QtCore.QRect(120, 50, 51, 20))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        self.fileCountSelectedLCD.setPalette(palette)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.fileCountSelectedLCD.setFont(font)
        self.fileCountSelectedLCD.setStyleSheet("background-color: rgb(0, 0, 0);")
        self.fileCountSelectedLCD.setProperty("value", 0.0)
        self.fileCountSelectedLCD.setObjectName("fileCountSelectedLCD")
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Camber Disc Golf Background Removal Tool"))
        self.inputFileButton.setText(_translate("MainWindow", "Select"))
        self.outputDirButton.setText(_translate("MainWindow", "Select"))
        self.outputFileLabel.setText(_translate("MainWindow", "Output Directory"))
        self.inputFileLabel.setText(_translate("MainWindow", "Input Files"))
        self.executeButton.setText(_translate("MainWindow", "Execute"))
        self.transparentCheckbox.setText(_translate("MainWindow", "Transparent backgrounds included?"))
        self.filesSelected.setText(_translate("MainWindow", "File Count Selected:"))
        self.filesSuccessful.setText(_translate("MainWindow", "File Count Successfully Cropped:"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
